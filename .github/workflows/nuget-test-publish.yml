name: Build and Test NuGet Package (Dev)

on:
    push:
        branches:
            - dev
    workflow_dispatch:

jobs:
    build-and-test-publish:
        runs-on: ubuntu-latest
        
        permissions:
            id-token: write  # enable GitHub OIDC token issuance for this job
            contents: read
        
        steps:
            # Checkout the repository
            - name: Checkout code
              uses: actions/checkout@v4
            
            # Setup .NET SDK
            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: '9.0.x'
            
            # Restore dependencies
            - name: Restore dependencies
              run: dotnet restore
            
            # Build the project
            - name: Build
              run: dotnet build --configuration Release --no-restore
            
            # Pack the NuGet package with pre-release version
            - name: Pack
              run: |
                  VERSION_SUFFIX=dev-$(date +%Y%m%d%H%M%S)
                  dotnet pack --configuration Release --no-build --output ./artifacts --version-suffix $VERSION_SUFFIX
            
            # Get a short-lived NuGet API key for test endpoint
            - name: NuGet login (OIDC â†’ temp API key)
              uses: NuGet/login@v1
              id: login
              with:
                  user: ${{ secrets.NUGET_USER }}  # Your nuget.org username (profile name)
            
            # Push the package to NuGet test endpoint
            - name: NuGet push to test endpoint
              run: dotnet nuget push ./artifacts/*.nupkg --api-key ${{ steps.login.outputs.NUGET_API_KEY }} --source https://int.nugettest.org/api/v2/package --skip-duplicate
            
            # Verify the package was published
            - name: Verify package
              run: |
                  echo "Package successfully pushed to NuGet test endpoint!"