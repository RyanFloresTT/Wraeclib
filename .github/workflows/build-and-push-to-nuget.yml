name: Build and Publish NuGet Package

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    permissions:
      id-token: write  # enable GitHub OIDC token issuance for this job
      contents: read
    
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Extract version from tag
      - name: Get version from tag
        id: get_version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION="1.0.0-dev"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Package version will be: $VERSION"
      
      # Setup .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      
      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore
      
      # Build the project with version
      - name: Build
        run: dotnet build --configuration Release --no-restore -p:Version=${{ steps.get_version.outputs.version }}
      
      # Pack the NuGet package with version
      - name: Pack
        run: dotnet pack --configuration Release --no-build --output ./artifacts -p:PackageVersion=${{ steps.get_version.outputs.version }}
      
      # Get a short-lived NuGet API key
      - name: NuGet login (OIDC â†’ temp API key)
        uses: NuGet/login@v1
        id: login
        with:
          user: ${{ secrets.NUGET_USER }}
      
      # Push the package
      - name: NuGet push
        run: dotnet nuget push ./artifacts/*.nupkg --api-key ${{ steps.login.outputs.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate